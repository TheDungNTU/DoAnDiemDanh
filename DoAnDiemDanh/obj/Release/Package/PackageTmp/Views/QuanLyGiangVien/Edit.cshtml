@model DoAnDiemDanh.Models.GIANGVIEN

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Layout/_LayoutAdmin.cshtml";

    <style>
        .is-invalid {
            color: #E84C3D;
            margin-top: 5px;
        }
    </style>
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index","DiemDanh")">Trang chủ</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Index","QuanLyGiangVien")">Quản lý giảng viên</a></li>
        <li class="breadcrumb-item " aria-current="page">Chỉnh sửa</li>
    </ol>
</nav>

@using (Html.BeginForm("Edit", "QuanLyGiangVien", FormMethod.Post, new { @class = "formGiangVien" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal shadow p-3 mb-2 card">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MaGV)

        <div class="form-group">
            <label class="control-label col-md-2" style="font-size: 17px; font-weight:bold">Tên Giảng Viên</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenGV, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenGV, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" style="font-size: 17px; font-weight:bold">Email</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" style="font-size: 17px; font-weight:bold">Tên Khoa</label>
            <div class="col-md-10">
                @Html.DropDownList("MaKhoa", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaKhoa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu lại" class="btn btn-success btn-icon-split p-2 border" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Quay lại", "Index")
</div>

<script>


    $(document).ready(function () {
       

        jQuery.validator.addMethod("NotAllowNumber", function (value, element) {
            return this.optional(element) || /^([^0-9]*)$/.test(value);
        }, "Không được phép có chữ số.");

        jQuery.validator.addMethod("NotAllowFirstSpace", function (value, element) {
            return this.optional(element) || /^\S{1}/.test(value);
        }, "Kí tự đầu tiên không được có khoảng trắng.");

        jQuery.validator.addMethod("NotAllowSpecial", function (value, element) {
            return this.optional(element) || /^([^*\u0040.!/'#$%^&(){}[:;<>,.?/~_+-=|]*)$/.test(value);
        }, "Không được phép có kí tự đặc biệt.");



        $(".formGiangVien").validate({
            onfocusout: function (element) {
                $(element).valid();
            },

            errorClass: "is-invalid",
            validClass: "is-valid",
            rules: {
                TenGV: {
                    required: true,
                    NotAllowNumber: true,
                    NotAllowSpecial: true,
                    NotAllowFirstSpace: true,
                },
                Email: {
                    required: true,
                    email: true,

                },
                MaKhoa: {
                    required: true,
                }
            },
            messages: {
                TenGV: {
                    required: "Tên giảng viên không được để trống.",

                },
                Email: {
                    required: "Email không được để trống.",
                    email: "Email không hợp lệ."

                },
                MaKhoa: {
                    required: "Bạn chưa chọn Khoa, hãy chọn 1.",

                },
            }
        });
    });
</script>
