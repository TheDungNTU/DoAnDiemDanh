@model IEnumerable<DoAnDiemDanh.Models.MONHOC>

@{
    var GiangVien = (IEnumerable<DoAnDiemDanh.Models.GIANGVIEN>)ViewBag.MaGV;
    ViewBag.Title = "Index";
    Layout = "~/Views/Layout/_LayoutAdmin.cshtml";

    <style>
        .is-invalid {
            color: #E84C3D;
            margin-top: 5px;
        }
        .mul-select {
            width: 100%;
            padding-left: 7px;
            height: 23px;
        }
       
    </style>
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index","DiemDanh")">Trang Chủ</a></li>
       
        <li class="breadcrumb-item " aria-current="page">Quản lý môn học</li>
    </ol>
</nav>

<!-- Modal -->
<div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content" style="width: 568px;">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Thêm Môn Học</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Ajax.BeginForm("Create", "QuanLyMonHoc", new AjaxOptions { HttpMethod = "POST", OnSuccess = "FnSuccess" }, new { @class = "formMH" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal p-3 mb-2">
                    <div class="form-group">
                        <label class="control-label col-md-4" for="TenMH">Tên Môn Học</label>
                        <div class="col-md-12">
                            <input class="form-control text-box single-line" id="TenMH" name="TenMH" type="text" value="" required>
                            <span class="field-validation-valid text-danger" data-valmsg-for="TenMH" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-4" for="SoTC">Số Tín Chỉ</label>
                        <div class="col-md-12">
                            <input class="form-control text-box single-line" data-val="true" data-val-number="The field SoTC must be a number." id="SoTC" name="SoTC" type="number" value="1" required>
                            <span class="field-validation-valid text-danger" data-valmsg-for="SoTC" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-4" for="NgayBD">Ngày Bắt Đầu</label>
                        <div class="col-md-12">
                            <input class="form-control text-box single-line" data-val="true" data-val-date="The field NgayBD must be a date." id="NgayBD" name="NgayBD" type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")" @*min="@DateTime.Now.ToString("yyyy-MM-dd")"*@ required>
                            <span class="field-validation-valid text-danger" data-valmsg-for="NgayBD" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-4" for="NgayKT">Ngày Kết Thúc</label>
                        <div class="col-md-12">
                            <input class="form-control text-box single-line" data-val="true" data-val-date="The field NgayKT must be a date." id="NgayKT" name="NgayKT" type="date" value="" @*min="@DateTime.Now.ToString("yyyy-MM-dd")"*@ required>
                            <span class="field-validation-valid text-danger" data-valmsg-for="NgayKT" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-4" for="TKB">Thời Khóa Biểu</label>
                        <div class="col-md-12">
                            <select class="form-control mul-select" id="TKB" name="TKB" required multiple="multiple" style="width: 100%">
                                <option value="1">Thứ Hai</option>
                                <option value="2">Thứ Ba</option>
                                <option value="3">Thứ Tư</option>
                                <option value="4">Thứ Năm</option>
                                <option value="5">Thứ Sáu</option>
                                <option value="6">Thứ Bảy</option>
                            </select>
                            <span class="field-validation-valid text-danger" data-valmsg-for="NgayKT" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-4" for="ThoiGianBDGD">Thời Gian Bắt Đầu</label>
                        <div class="col-md-12">
                            <input class="form-control text-box single-line" id="ThoiGianBDGD" name="ThoiGianBDGD" type="time" value="" required>
                            <span class="field-validation-valid text-danger" data-valmsg-for="ThoiGianBDGD" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-4" for="ThoiGianKTGD">Thời Gian Kết Thúc</label>
                        <div class="col-md-12">
                            <input class="form-control text-box single-line" id="ThoiGianKTGD" name="ThoiGianKTGD" type="time" value="" required>
                            <span class="field-validation-valid text-danger" data-valmsg-for="ThoiGianKTGD" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <input class="form-control text-box single-line" id="TenGV" name="TenGV" type="text" value="" style="display: none;">
                        <label class="control-label col-md-4" for="MaGV">Giảng Viên Dạy</label>
                        <div class="col-md-12">
                            <select class="form-control" id="MaGV" name="MaGV" required>
                                <option value="">Mời bạn chọn Giảng Viên</option>
                                @foreach (var item in GiangVien)
                                {
                                    <option value="@item.MaGV">@item.TenGV</option>
                                }
                            </select>
                            <span class="field-validation-valid text-danger" data-valmsg-for="MaGV" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-12 text-left d-flex justify-content-lg-end">
                            <button type="button" class="btn btn-secondary mr-2" data-dismiss="modal">Đóng</button>
                            <button type="submit" class="btn btn-success btn-icon-split p-2 border">Thêm mới</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<p>

    <Button class="btn btn-success btn-icon-split shadow" style="position: absolute; top: 5px; right: 25px" data-toggle="modal" data-target="#exampleModalLong">
        <span class="icon text-white-50">
            <i class="fas fa-plus"></i>
        </span>
        <span class="text">Thêm Môn Học Mới</span>
    </Button>
</p>


<div class="card shadow mb-4">
    <div>
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">DANH SÁCH TẤT CẢ MÔN HỌC</h6>
        </div>
    </div>
    <div class="card-body">
        <div class="filter">
            <input type="text" class="form-control form-control-sm" id="Filter_QLTenMH" name="Filter_QLTenMH" placeholder="Nhập tên môn học..." />
        </div>

        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>Tên Môn Học</th>
                        <th style="width:80px;">Số Tín Chỉ</th>
                        <th style="width:80px;">Ngày Bắt Đầu</th>
                        <th style="width:80px;">Ngày Kết Thúc</th>
                        <th>Thời gian giảng dạy</th>
                        <th>Giảng Viên Dạy</th>
                        <th>Số Sinh Viên</th>
                        <th style="width: 97px;">Chức năng</th>
                    </tr>
                </thead>
                <tbody id="data_table">
                    @foreach (var item in Model)
                    {
                        <tr id="row_@item.MaMH">
                            <td>
                                @Html.DisplayFor(modelItem => item.TenMH)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SoTC)
                            </td>
                            <td>
                                @Convert.ToDateTime(item.NgayBD).ToString("dd/MM/yyyy")
                            </td>
                            <td>
                                @Convert.ToDateTime(item.NgayKT).ToString("dd/MM/yyyy")
                            </td>
                            <td>
                                @{
                                    TimeSpan a = (TimeSpan)item.ThoiGianKTGD - (TimeSpan)@item.ThoiGianBDGD;
                                    var s = a.Hours + " Giờ " + a.Minutes + " Phút";
                                }
                                @s
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.GIANGVIEN.TenGV)
                            </td>
                            <td>
                                <span class="btn btn-primary btn-icon-split">
                                    <span class="icon text-white-50">
                                        @item.SINHVIENs.Count()
                                    </span>
                                    <span class="text">Sinh Viên</span>
                                </span>

                            </td>
                            <td>
                                @Html.ActionLink("Chỉnh sửa", "Edit", new { id = item.MaMH }) |
                                <a class="delete" data-model-id="@item.MaMH" onclick="Delete(this)" style="cursor: pointer;">Xóa</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>



<script>

    var dt;

    function loadDataTable() {

        function removeAccents(str) {
            return str.normalize('NFD')
                .replace(/[\u0300-\u036f]/g, '')
                .replace(/đ/g, 'd').replace(/Đ/g, 'D');
        }

        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {

                var TenMH = removeAccents($('#Filter_QLTenMH').val()).toLowerCase();
                var Data_TenMH = removeAccents(data[0]).toLowerCase();

                if (Data_TenMH.includes(TenMH)) {
                    return true;
                }
                return false;
            }
        );

        dt = $("#dataTable").DataTable({
            "language": {
                "lengthMenu": "Số hàng mỗi trang _MENU_",
                "search": "Tìm kiếm:",
                "info": "Tổng số _TOTAL_ hàng",
                "infoEmpty": "",
                "infoFiltered": "",
                "paginate": {
                    "first": "Đầu",
                    "last": "Cuối",
                    "next": "Trang sau",
                    "previous": "Trang trước"
                },
                searchPlaceholder: "Nhập tên môn học...",
                zeroRecords: "Không tìm thấy kết quả",
            }
        });

        $('#Filter_QLTenMH').on('input', function (e) {
            dt.draw();
        });
    }

    function FnSuccess(data) {
        if (data != false) {
            $(".close").click();
            var node = dt.row.add([
                        data.TenMH,
                        data.SoTC,
                        data.NgayBD,
                        data.NgayKT,
                        data.ThoiGianDay,
                        data.GiangVienDay,
                        `<span class="btn btn-primary btn-icon-split">
                                    <span class="icon text-white-50">
                                        ${0}
                                    </span>
                                    <span class="text">Sinh Viên</span>
                                </span>`,
                `<a href="/QuanLyMonHoc/Edit/${data.MaMH}">Chỉnh sửa</a> |
                                             <a class="delete" data-model-id="${data.MaMH}" onclick="Delete(this)" style="cursor: pointer;">Xóa</a>`
            ]).draw(true).node();
            $(node).attr('id', `row_${data.MaMH}`);
            Swal.fire({
                icon: 'success',
                title: 'Thành Công',
                text: `Môn học ${data.TenMH} đã được thêm thành công`,
                timer: 2000,
                showConfirmButton: false

            })
        }

    }


    function Delete(obj) {
        var ele = $(obj);
        var MaMH = ele.data("model-id");
        var url = `/QuanLyMonHoc/Delete/${MaMH}`

        swal.fire({
            title: 'Bạn có chắc?',
            text: "Nếu xóa sẽ không thể khôi phục!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Có, Hãy xóa!',
            cancelButtonText: 'Không, Quay lại!',
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                $.post(url, { id: MaMH })
                    .done(function (data) {
                        dt.rows(`#row_${data.id}`)
                            .remove()
                            .draw();
                        Swal.fire({
                            icon: 'success',
                            title: 'Thành Công',
                            text: `Môn Học ${data.TenMH} đã được xóa`,
                            timer: 2000,
                            showConfirmButton: false
                        })
                    })
                    .fail(function (data) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Không thành công',
                            text: `Môn học đã có sinh viên đăng ký, không thể xóa!`,
                            timer: 2000,
                            showConfirmButton: false
                        })
                    });
            }
            else if (result.dismiss === Swal.DismissReason.cancel) {

            }
        })


    };


    $("#MaGV").change(function () {
        var tengv = $("#MaGV option:selected").html();
        $("#TenGV").val(tengv);
    })

    $(document).ready(function () {

        loadDataTable();

        jQuery.validator.addMethod("NotAllowNumber", function (value, element) {
            return this.optional(element) || /^([^0-9]*)$/.test(value);
        }, "Không được phép có chữ số.");

        jQuery.validator.addMethod("NotAllowFirstSpace", function (value, element) {
            return this.optional(element) || /^\S{1}/.test(value);
        }, "Kí tự đầu tiên không được có khoảng trắng.");

        jQuery.validator.addMethod("NotAllowSpecial", function (value, element) {
            return this.optional(element) || /^([^*\u0040.!/'#$%^&(){}[:;<>,.?/~_+-=|]*)$/.test(value);
        }, "Không được phép có kí tự đặc biệt.");

        jQuery.validator.addMethod("greaterThan",
        function (value, element, params) {

                if (!/Invalid|NaN/.test(new Date(value))) {
                    return new Date(value) > new Date($(params).val());
                }

                return isNaN(value) && isNaN($(params).val())
                    || (Number(value) > Number($(params).val()));
            }, 'Ngày kết thúc phải lớn hơn ngày bắt đầu.');


        var form = $(".formMH").validate({
            onfocusout: function (element) {
                $(element).valid();
            },
            invalidHandler: function (form, validator) {
                Swal.fire({
                    icon: 'error',
                    title: 'Xuất hiện lỗi',
                    text: `Thêm Môn Học không thành công`,
                    timer: 2000,
                    showConfirmButton: false

                })
                validator.focusInvalid();

            },

            errorClass: "is-invalid",
            validClass: "is-valid",
            rules: {
                TenMH: {
                    required: true,
                    NotAllowFirstSpace: true,
                    NotAllowNumber: true,
                    NotAllowSpecial: true,

                },
                SoTC: {
                    required: true,
                    range: [1, 10]
                },
                NgayBD: {
                    required: true,
                },
                NgayKT: {
                    required: true,
                    greaterThan: "#NgayBD"
                },
                ThoiGianBDGD: {
                    required: true,
                },
                ThoiGianKTGD: {
                    required: true,
                },
                MaGV: {
                    required: true,
                },

            },
            messages: {
                TenMH: {
                    required: "Tên môn học không được để trống.",
                },
                SoTC: {
                    required: "Số tín chỉ không được để trống",
                    range: "Số tín chỉ phải lớn hơn 1 và bé hơn 10"
                },
                NgayBD: {
                    required: "Ngày bắt đầu không được để trống",
                },
                NgayKT: {
                    required: "Ngày kết thúc không được để trống.",
                },
                ThoiGianBDGD: {
                    required: "Thời gian bắt đầu giảng dạy không được để trống",
                },
                ThoiGianKTGD: {
                    required: "Thời gian bắt đầu giảng dạy không được để trống",
                },
                MaGV: {
                    required: "Bạn chưa chọn Giảng viên, hãy chọn 1.",
                }
            }
        });

        $(".mul-select").select2({
            placeholder: "Chọn Thời Khóa Biểu",
            tags: true,
            tokenSperators: ['/', ',', ',', " "],
            width: 'resolve',
            heigth: 'resolve'
        });

        $(".close").click(function () {
            form.resetForm();
        })
    });

</script>