@using DoAnDiemDanh.Models
@model IEnumerable<SINHVIEN>


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Layout/_LayoutAdmin.cshtml";
    var DS_Khoa = (IEnumerable<KHOA>)ViewBag.Khoa;
    var DS_Khoa_Filter = (IEnumerable<KHOA>)ViewBag.Khoa_Filter;
    var DS_Lop_Filter = (IEnumerable<LOP>)ViewBag.Lop_Filter;

    <style>
        .table_filter tr {
            height: 50px;
        }

        .is-invalid {
            color: #E84C3D;
            margin-top: 5px;
        }
    </style>
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index","DiemDanh")">Trang Chủ</a></li>

        <li class="breadcrumb-item " aria-current="page">Quản lý sinh viên</li>
    </ol>
</nav>


<div class="modal fade" id="exampleModalLong1" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content formthemsv">
            <div class="modal-header">
                <h5 class="modal-title font-weight-bold" id="exampleModalLongTitle">Thêm Sinh Viên Mới</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Ajax.BeginForm("Create", "QuanLySinhVien", new AjaxOptions { HttpMethod = "POST", OnSuccess = "FnSuccess" }, new { @class = "formSinhVien" }))
            {
                @Html.AntiForgeryToken()

        <div class="form-horizontal p-3 mb-2">
            <div class="form-group">
                <label class="control-label col-md-4" style="font-size: 17px; font-weight:bold">Tên Sinh Viên</label>
                <div class="col-md-12">
                    <input class="form-control text-box single-line" id="TenSV" name="TenSV" type="text" value="">
                    <span class="field-validation-valid text-danger" data-valmsg-for="TenSV" data-valmsg-replace="true"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-4" style="font-size: 17px; font-weight:bold">Email</label>
                <div class="col-md-12">
                    <input class="form-control text-box single-line" id="Email" name="Email" type="text" value="">
                    <span class="field-validation-valid text-danger" data-valmsg-for="Email" data-valmsg-replace="true"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-4" style="font-size: 17px; font-weight:bold">Điện Thoại</label>
                <div class="col-md-12">
                    <input class="form-control text-box single-line" id="SDT" name="SDT" type="text" value="">
                    <span class="field-validation-valid text-danger" data-valmsg-for="SDT" data-valmsg-replace="true"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-4" style="font-size: 17px; font-weight:bold">Địa Chỉ</label>
                <div class="col-md-12">
                    <input class="form-control text-box single-line" id="DiaChi" name="DiaChi" type="text" value="">
                    <span class="field-validation-valid text-danger" data-valmsg-for="DiaChi" data-valmsg-replace="true"></span>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-4" style="font-size: 17px; font-weight:bold">Tên Khoa</label>
                <div class="col-md-12">
                    <select class="form-control" data-val="true" data-val-number="The field MaKhoa must be a number." id="MaKhoa" name="MaKhoa">
                        <option value="">Mời bạn chọn Khoa</option>
                        @foreach (var item in DS_Khoa)
                        {
                            <option value="@item.MaKhoa">@item.TenKhoa</option>
                        }
                    </select>
                    <span class="field-validation-valid text-danger" data-valmsg-for="MaKhoa" data-valmsg-replace="true"></span>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-4" style="font-size: 17px; font-weight:bold">Tên Lớp</label>
                <div class="col-md-12">
                    <select class="form-control" data-val="true" data-val-number="The field MaLop must be a number." id="MaLop" name="MaLop">
                        <option value="">Mời bạn chọn Lớp Học</option>
                    </select>
                    <span class="field-validation-valid text-danger" data-valmsg-for="MaLop" data-valmsg-replace="true"></span>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-12 text-left d-flex justify-content-lg-end">
                    <button type="button" class="btn btn-secondary mr-2 close1" data-dismiss="modal">Đóng</button>
                    <button type="submit" class="btn btn-success btn-icon-split p-2 border">Thêm mới</button>
                </div>
            </div>
        </div>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content" style="width: 568px;">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Import File Excel</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Ajax.BeginForm("ImportFileExcel", "QuanLySinhVien", new AjaxOptions { HttpMethod = "POST", OnSuccess = "FnSuccessImport", OnBegin = "FnBeginImport", OnComplete = "FnCompleteImport" }, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal p-3 mb-2">
                    <div class="form-group">
                        <label class="control-label col-md-4" for="TenMH">Upload file</label>
                        <div class="col-md-12">
                            <input class="form-control text-box single-line" id="excel" name="excel" type="file" value="" required style="padding: 3px;" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel">
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-12 text-left d-flex justify-content-lg-end">
                            <button type="button" class="btn btn-secondary mr-2" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-success btn-icon-split p-2 border">Import</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<p>
    <button class="btn btn-success btn-icon-split shadow" style="position: absolute; top: 5px; right: 25px" data-toggle="modal" data-target="#exampleModalLong1" id="themsv">
        <span class="icon text-white-50">
            <i class="fas fa-plus"></i>
        </span>
        <span class="text">Thêm Sinh Viên Mới</span>
    </button>
    <button class="btn btn-success btn-icon-split shadow" style="position: absolute; top: 5px; right: 475px" id="train_model">
        <span class="icon text-white-50">
            <i class="fas fa-cloud-upload-alt"></i>
        </span>
        <span class="text">Huấn luyện ảnh</span>
    </button>
    <button class="btn btn-success btn-icon-split shadow" style="position: absolute; top: 5px; right: 260px" data-toggle="modal" data-target="#exampleModalLong" id="importexcel">
        <span class="icon text-white-50">
            <i class="fas fa-file-excel"></i>
        </span>
        <span class="text">Import File Excel</span>
    </button>
</p>


<!-- DataTales Example -->
<div class="card shadow mb-4">
    <div>
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">DANH SÁCH TẤT CẢ SINH VIÊN</h6>
        </div>
    </div>
    <div class="card-body">
        <div class="filter">
            <input type="text" class="form-control form-control-sm" id="Filter_QLTenSV" name="Filter_QLTenSV" placeholder="Tìm kiếm..." />
        </div>

        <div style="position: absolute; top: 72px; right: 339px; z-index: 999;">
            <select class="form-control form-control-sm" id="Filter_TenKhoa" name="Filter_TenKhoa">
                <option value=" ">Tất cả các khoa</option>
                @foreach (var item in DS_Khoa_Filter)
                {
                    <option value="@item.TenKhoa">@item.TenKhoa</option>
                }
            </select>
        </div>
        <div style="position: absolute; top: 72px; right: 206px; z-index: 999;">
            <select class="form-control form-control-sm" id="Filter_TenLop" name="Filter_TenLop">
                <option value=".">Tất cả các lớp</option>
                @foreach (var item in DS_Lop_Filter)
                {
                    <option value="@item.TenLop">@item.TenLop</option>
                }
            </select>
        </div>
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th style=" width: 45.8px;">MSSV</th>
                        <th style=" width: 125.4px;">Tên Sinh Viên</th>
                        <th style=" width: 188px;">Email</th>
                        <th style=" width: 67px;">SĐT</th>
                        <th style=" width: 159.6px;">Tên Khoa</th>
                        <th style=" width: 64px;">Tên Lớp</th>
                        <th style=" width: 111px;">Hình Ảnh</th>
                        <th>Chức năng</th>
                    </tr>
                </thead>
                <tbody id="data_table">
                    @foreach (var item in Model)
                    {
                    <tr id="row_@item.MaSV">
                        <td>
                            @Html.DisplayFor(modelItem => item.MaSV)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TenSV)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SDT)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.KHOA.TenKhoa)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LOP.TenLop)
                        </td>
                        <td>
                            <a href="@Url.Action("Details_SinhVien_HinhAnh","QuanLyHinhAnh", new{id = item.MaSV, MaPhongHoc = ViewBag.MaPhongHoc})" class="btn btn-primary btn-icon-split">
                                <span class="icon text-white-50">
                                    @item.HINHANH_SV.Count()
                                </span>
                                <span class="text">Hình ảnh</span>
                            </a>
                        </td>
                        <td>
                            @Html.ActionLink("Chỉnh sửa", "Edit", new { id = item.MaSV }) |
                            <a class="delete" data-model-id="@item.MaSV" onclick="Delete(this)" style="cursor: pointer;">Xóa</a>
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<script>

    $("#MaKhoa").change(function () {
        $.get("/QuanLySinhVien/GetLopHoc", { id: $(this).val() }, function (data) {
            $("#MaLop").empty()
            $.each(data, function (index, row) {
                $("#MaLop").append("<option value='" + row.MaLop + "'>" + row.TenLop + "</option>")
            })
        })
    })

    var dt;

    function loadDataTable() {

        function removeAccents(str) {
            return str.normalize('NFD')
                .replace(/[\u0300-\u036f]/g, '')
                .replace(/đ/g, 'd').replace(/Đ/g, 'D');
        }

        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {

                var TenKhoa = $('#Filter_TenKhoa option:selected').val();
                var TenLop = $('#Filter_TenLop option:selected').val();

                var TenSV = removeAccents($('#Filter_QLTenSV').val()).toLowerCase();
                var Data_TenSV = removeAccents(data[1]).toLowerCase();


                var Data_TenKhoa = data[4];
                var Data_TenLop = data[5];

                if (Data_TenLop.includes(TenLop) && Data_TenKhoa.includes(TenKhoa) && Data_TenSV.includes(TenSV)) {
                    return true;
                }
                return false;
            }
        );

        dt = $("#dataTable").DataTable({
            language: {
                lengthMenu: "Số hàng mỗi trang _MENU_",
                search: "Tìm kiếm:",
                info: "Tổng số _TOTAL_ hàng",
                paginate: {
                    first: "Đầu",
                    last: "Cuối",
                    next: "Trang sau",
                    previous: "Trang trước",

                },
                searchPlaceholder: "Tìm kiếm...",
                zeroRecords: "Không tìm thấy kết quả",
            },
            "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]]
        });


        $("#Filter_TenKhoa").change(function () {
            dt.draw();
        });

        $("#Filter_TenLop").change(function () {
            dt.draw();
        });

        $('#Filter_QLTenSV').on('input', function (e) {
            dt.draw();
        });
    }

    function FnSuccess(data) {
        $('.close').click();
        if (data != false) {

            var node = dt.row.add([
                data.MaSV,
                data.TenSV,
                data.Email,
                data.SDT,
                data.TenKhoa,
                data.TenLop,
                `<a href="/QuanLyHinhAnh/Details_SinhVien_HinhAnh/${data.MaSV}?MaPhongHoc=@ViewBag.MaPhongHoc" class="btn btn-primary btn-icon-split">
                                        <span class="icon text-white-50">
                                            0
                                        </span>
                                        <span class="text">Hình ảnh</span>
                                    </a>`,
                `<a href='/QuanLySinhVien/Edit/${data.MaSV}'>Chỉnh sửa</a> | <a class="delete" data-model-id="${data.MaSV}" onclick="Delete(this)" style="cursor: pointer;">Xóa</a>`
            ]).draw().node();
            $(node).attr('id', `row_${data.MaSV}`);
            Swal.fire({
                icon: 'success',
                title: 'Thành Công',
                text: `Sinh Viên ${data.TenSV} đã được thêm thành công`,
                timer: 2000,
                showConfirmButton: false

            })
        }
        else {
            Swal.fire({
                icon: 'error',
                title: 'Có lỗi',
                text: `Email đã được sử dụng, vui lòng nhập một email khác`,
                timer: 2000,
                showConfirmButton: false

            })
        }
    }

    function Delete(obj) {
        var ele = $(obj);
        var MaSV = ele.data("model-id");
        var url = `/QuanLySinhVien/Delete/${MaSV}`

        swal.fire({
            title: 'Bạn có chắc?',
            text: "Nếu xóa sẽ không thể khôi phục!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Có, Hãy xóa!',
            cancelButtonText: 'Không, Quay lại!',
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                $.post(url, { id: MaSV })
                    .done(function (data) {
                        dt.rows(`#row_${data.id}`)
                            .remove()
                            .draw();
                        Swal.fire({
                            icon: 'success',
                            title: 'Thành Công',
                            text: `Sinh Viên ${data.TenSV} đã được xóa`,
                            timer: 2000,
                            showConfirmButton: false
                        })
                    })
                    .fail(function (data) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Không thành công',
                            text: `Sinh viên đã đăng ký môn học, không thể xóa!`,
                            timer: 2000,
                            showConfirmButton: false

                        })
                    });
            }
            else if (result.dismiss === Swal.DismissReason.cancel) {

            }
        })
    };

    function FnBeginImport() {
        $('.close').click();
        $('.loader-wrapper').show();
    }

    function FnSuccessImport(data) {
        if (data != false) {
            console.log(data);
            $.each(data, function (index, value) {
                var node = dt.row.add([
                    value.MaSV,
                    value.TenSV,
                    value.Email,
                    value.SDT,
                    value.TenKhoa,
                    value.TenLop,
                    `<a href="/QuanLyHinhAnh/Details_SinhVien_HinhAnh/${value.MaSV}?MaPhongHoc=@ViewBag.MaPhongHoc" class="btn btn-primary btn-icon-split">
                                        <span class="icon text-white-50">
                                            0
                                        </span>
                                        <span class="text">Hình ảnh</span>
                                    </a>`,
                    `<a href='/QuanLySinhVien/Edit/${value.MaSV}'>Chỉnh sửa</a> | <a class="delete" data-model-id="${value.MaSV}" onclick="Delete(this)" style="cursor: pointer;">Xóa</a>`
                ]).draw().node();
                $(node).attr('id', `row_${value.MaSV}`);
            })
            $('.loader-wrapper').hide();
            Swal.fire({
                icon: 'success',
                title: 'Thành Công',
                text: `Import danh sách sinh viên thành công`,
                timer: 2000,
                showConfirmButton: false
            })
        }
        else {
            $('.loader-wrapper').hide();
            Swal.fire({
                icon: 'error',
                title: 'Có lỗi xảy ra',
                text: `Đã tồn tại email, vui lòng kiểm tra lại`,
                timer: 2000,
                showConfirmButton: false
            })
        }
    }

    function FnCompleteImport() {

    }

    $('#train_model').click(function () {
        $.post("https://1544-112-78-15-3.ngrok.io/stop")
            .done(function (data) {
                $.post("https://1544-112-78-15-3.ngrok.io/train", function (data) {
                    $(".close").click();
                    $('#hinhanh_cam').empty();
                    Swal.fire({
                        icon: 'success',
                        title: 'Thành Công',
                        text: `Update Data`,
                        timer: 2000,
                        showConfirmButton: false

                    })
                })
            })
            .fail((data) => {
                Swal.fire({
                    icon: 'error',
                    title: 'Thất bại',
                    text: `Server hiện đang tắt, vui lòng bật lại`,
                    timer: 2000,
                    showConfirmButton: false

                })
            })
        })


    $(document).ready(function () {
        loadDataTable();

        if ($(window).width() < 480) {


            $('#stopcam').addClass('d-none')
            $('#train_model').addClass('d-none')
            $('#importexcel').addClass('d-none')
            $('#themsv').removeAttr('style')
            $("#Filter_TenLop").addClass("d-none")
            $("#Filter_TenKhoa").addClass("d-none")




            dt.column(2).visible(false, false);
            dt.column(3).visible(false, false);

            dt.columns.adjust().draw(false);

        }

        jQuery.validator.addMethod("NotAllowNumber", function (value, element) {
            return this.optional(element) || /^([^0-9]*)$/.test(value);
        }, "Không được phép có chữ số.");

        jQuery.validator.addMethod("NotAllowFirstSpace", function (value, element) {
            return this.optional(element) || /^\S{1}/.test(value);
        }, "Kí tự đầu tiên không được có khoảng trắng.");

        jQuery.validator.addMethod("NotAllowSpecial", function (value, element) {
            return this.optional(element) || /^([^*\u0040.!/'#$%^&(){}[:;<>,.?/~_+-=|]*)$/.test(value);
        }, "Không được phép có kí tự đặc biệt.");


        var form = $(".formSinhVien").validate({
            onfocusout: function (element) {
                $(element).valid();
            },
            invalidHandler: function (form, validator) {
                Swal.fire({
                    icon: 'error',
                    title: 'Xuất hiện lỗi',
                    text: `Thêm Sinh Viên không thành công`,
                    timer: 2000,
                    showConfirmButton: false

                })
                validator.focusInvalid();

            },
            errorClass: "is-invalid",
            validClass: "is-valid",
            rules: {
                TenSV: {
                    required: true,
                    NotAllowNumber: true,
                    NotAllowSpecial: true,
                    NotAllowFirstSpace: true,
                },

                MaKhoa: {
                    required: true,
                },
                MaLop: {
                    required: true,
                }
            },
            messages: {
                TenSV: {
                    required: "Tên sinh viên không được để trống.",

                },

                MaKhoa: {
                    required: "Bạn chưa chọn Khoa, hãy chọn 1.",
                },

                MaLop: {
                    required: "Bạn chưa chọn Khoa, hãy chọn 1.",

                },
            }
        });

        $(".close").click(function () {
            form.resetForm();
        })

        $(".close1").click(function () {
            form.resetForm();
        })
    });
</script>
