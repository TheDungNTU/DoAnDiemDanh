@model IEnumerable<DoAnDiemDanh.Models.GIANGVIEN>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Layout/_LayoutAdmin.cshtml";
    IEnumerable<DoAnDiemDanh.Models.MONHOC> MONHOC = (IEnumerable<DoAnDiemDanh.Models.MONHOC>)ViewBag.MONHOC;
    var Khoa = (IEnumerable<DoAnDiemDanh.Models.KHOA>)ViewBag.MaKhoa;
    <style>
        .is-invalid {
            color: #E84C3D;
            margin-top: 5px;
        }
    </style>
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index","DiemDanh")">Trang chủ</a></li>
        
        <li class="breadcrumb-item active" aria-current="page">Quản lý giảng viên</li>
    </ol>
</nav>

@using (Ajax.BeginForm("Create", "QuanLyGiangVien", new AjaxOptions { HttpMethod = "POST", OnSuccess = "FnSuccess" }, new { @class = "formGiangVien" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal shadow p-3 mb-2 card">
        <div class="form-group">
            <label class="control-label col-md-2" style="font-size: 17px; font-weight:bold">Tên Giảng Viên</label>
            <div class="col-md-10">
                <input class="form-control text-box single-line" id="TenGV" name="TenGV" type="text" value="">
                <span class="field-validation-valid text-danger" data-valmsg-for="TenGV" data-valmsg-replace="true"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" style="font-size: 17px; font-weight:bold">Email</label>
            <div class="col-md-10">
                <input class="form-control text-box single-line" id="Email" name="Email" type="text" value="">
            </div>
        </div>
        <div class="form-group">
            <input class="form-control text-box single-line" id="TenKhoa" name="TenKhoa" type="text" value="" style="display: none;">
            <label class="control-label col-md-2" style="font-size: 17px; font-weight:bold">Tên Khoa</label>
            <span id="TenKhoa"></span>
            <div class="col-md-10">
                <select class="form-control" id="MaKhoa" name="MaKhoa" required>
                    <option value="">Mời bạn chọn Khoa</option>
                    @foreach (var item in Khoa)
                    {
                        <option value="@item.MaKhoa">@item.TenKhoa</option>
                    }
                </select>
                <span class="field-validation-valid text-danger" data-valmsg-for="MaKhoa" data-valmsg-replace="true"></span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Thêm mới" class="btn btn-success btn-icon-split p-2 border">
            </div>
        </div>
    </div>
}

<div class="card shadow mb-4">
    <div>
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">DANH SÁCH TẤT CẢ GIẢNG VIÊN</h6>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>Mã Giảng Viên</th>
                        <th>Tên Giảng Viên</th>
                        <th>Email</th>
                        <th>Khoa</th>
                        <th>Số môn học giảng dạy</th>
                        <th>Chức năng</th>
                    </tr>
                </thead>
                <tbody id="data_table">
                    @foreach (var item in Model)
                    {
                        <tr id="row_@item.MaGV">
                            <td>
                                @Html.DisplayFor(modelItem => item.MaGV)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TenGV)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.KHOA.TenKhoa)
                            </td>
                            <td>
                                <a href="#" class="btn btn-primary btn-icon-split">
                                    <span class="icon text-white-50">
                                        @MONHOC.ToList().Where(_ => _.MaGV == item.MaGV).Count()
                                    </span>
                                    <span class="text">Môn Học</span>
                                </a>
                            </td>
                            <td>
                                <a href='/QuanLyGiangVien/Edit/@item.MaGV'>Chỉnh sửa</a> |
                                @Ajax.ActionLink("Xóa", "Delete", new { id = item.MaGV }, new AjaxOptions { HttpMethod = "POST", OnSuccess = "deleteSuccess", Confirm = "Bạn có muốn xóa bản ghi này ?" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>

    var dt;

    function loadDataTable() {
        dt = $("#dataTable").DataTable();
    }

    function FnSuccess(data) {
        if (data != false) {
            var node = dt.row.add([
                data.MaGV,
                data.TenGV,
                data.Email,
                data.TenKhoa,
                `<a href="#" class="btn btn-primary btn-icon-split">
                            <span class="icon text-white-50">
                                0
                            </span>
                            <span class="text">Môn Học</span>`,

                `<a href='/QuanLyGiangVien/Edit/${data.MaGV}'>Chỉnh sửa</a> |<a data-ajax="true" data-ajax-confirm="Bạn có muốn xóa bản ghi này ?" data-ajax-method="POST" data-ajax-success="deleteSuccess" href="/QuanLyGiangVien/Delete/${data.MaGV}">Xóa</a>`
            ]).draw().node();
            $(node).attr('id', `row_${data.MaGV}`);
            alertSuccess();
            $('#TenGV').val('');
            $('#Email').val('');
            $('#MaKhoa').val('').change();
        }
        else {
            alertFail();
        }

    }

    function deleteSuccess(data) {
        dt.rows(`#row_${data}`)
            .remove()
            .draw();
        alertSuccess();

    }

    function alertSuccess() {
        $('.alert').addClass("show");
        $('.alert').removeClass("hide");
        $('.alert').addClass("showAlert");
        setTimeout(function () {
            $('.alert').removeClass("show");
            $('.alert').addClass("hide");
        }, 5000);
        $('.close-btn').click(function () {
            $('.alert').removeClass("show");
            $('.alert').addClass("hide");
        });
    }

    function alertFail() {
        $('.fail').addClass("show");
        $('.fail').removeClass("hide");
        $('.fail').addClass("showAlert");
        setTimeout(function () {
            $('.fail').removeClass("show");
            $('.fail').addClass("hide");
            $('.fail').removeClass("showAlert");
        }, 5000);


        $('.close-btn').click(function () {
            $('.fail').removeClass("show");
            $('.fail').addClass("hide");
            $('.fail').removeClass("showAlert");

        });
    }


    $(document).ready(function () {
        loadDataTable();

        jQuery.validator.addMethod("NotAllowNumber", function (value, element) {
            return this.optional(element) || /^([^0-9]*)$/.test(value);
        }, "Không được phép có chữ số.");

        jQuery.validator.addMethod("NotAllowFirstSpace", function (value, element) {
            return this.optional(element) || /^\S{1}/.test(value);
        }, "Kí tự đầu tiên không được có khoảng trắng.");

        jQuery.validator.addMethod("NotAllowSpecial", function (value, element) {
            return this.optional(element) || /^([^*\u0040.!/'#$%^&(){}[:;<>,.?/~_+-=|]*)$/.test(value);
        }, "Không được phép có kí tự đặc biệt.");



        $(".formGiangVien").validate({
            onfocusout: function (element) {
                $(element).valid();
            },

            errorClass: "is-invalid",
            validClass: "is-valid",
            rules: {
                TenGV: {
                    required: true,
                    NotAllowNumber: true,
                    NotAllowSpecial: true,
                    NotAllowFirstSpace: true,
                },
                Email: {
                    required: true,
                    email: true,
                    
                },
                MaKhoa: {
                    required: true,
                }
            },
            messages: {
                TenGV: {
                    required: "Tên giảng viên không được để trống.",

                },
                Email: {
                    required: "Email không được để trống.",
                    email: "Email không hợp lệ."

                },
                MaKhoa: {
                    required: "Bạn chưa chọn Khoa, hãy chọn 1.",

                },
            }
        });
    });
</script>
